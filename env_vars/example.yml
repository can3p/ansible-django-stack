---

server_user: example_user # a server user to install with security playbook
user_public_keys:
  - ~/.ssh/example_rsa.pub # keys for ssh access

site_host: example.com
certbot_admin_email: example@gmail.com # general
git_repo: git@github.com:example/example.com.git # per project

# Set this flag to true so you can checkout code from a private git repository
# which is setup with an SSH key.
ssh_forward_agent: true

project_name: example # per project
application_name: example # per project. Why do we have both?

# ensure we have a superuser there
django_admin_user: can3p
django_admin_password: password
django_admin_email: dpetroff@gmail.com

# guard site with basic auth
basic_auth_enabled: true
basic_auth_user: example
basic_auth_password: example_password

# if we want to build static with node
node_build_enabled: true

# Note that this PPA doesn't guarantee timely updates in case of security issues.
# Simply remove these two vars below if you prefer to use the official PPA and
# default Python version that came with your Linux distro.
#
# More info here: https://launchpad.net/~fkrull/+archive/ubuntu/deadsnakes
enable_deadsnakes_ppa: false
virtualenv_python_version: python3.6

# Git settings.
setup_git_repo: true
git_branch: master

# Database settings.
db_user: "{{ application_name }}"
db_name: "{{ application_name }}"
db_password: password


# Gunicorn settings. For the number of workers, a good rule to follow is
# 2 x number of CPUs + 1
gunicorn_num_workers: 3

# Setting this to 1 will restart the Gunicorn process each time
# you make a request, basically reloading the code. Very handy
# when developing. Set to 0 for unlimited requests (default).
gunicorn_max_requests: 0


# RabbitMQ settings.
rabbitmq_server_name: "{{ inventory_hostname }}"

rabbitmq_admin_user: admin
rabbitmq_admin_password: password

rabbitmq_application_vhost: "{{ application_name }}"
rabbitmq_application_user: "{{ application_name }}"
rabbitmq_application_password: password


# Celery settings.
celery_num_workers: 2


# Application settings.
django_settings_file: "config.settings.production"

# Email settings:
mailjet_api_key: "123"
mailjet_secret_key: "456"

# prefix of admin url pages
django_admin_url: "akr2icmg1n8%z^3fe3c+)5d0(t^cy-2_25rrl35a7@!scna^1#"

# secret key for django cryptographic facilities
django_secret_key: "wljncf po23jd02j3doij2398dhj2eoxmskjb jhwdbck829919"

broker_url: "amqp://{{ rabbitmq_application_user }}:{{ rabbitmq_application_password }}@localhost/{{ rabbitmq_application_vhost }}"

run_django_db_migrations: true
run_django_collectstatic: true
